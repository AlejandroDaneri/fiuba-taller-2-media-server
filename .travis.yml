sudo: required
language: node_js
node_js:
  - 13

services:
  - docker

before_install:
  # install heroku CLI
  - wget -qO- https://toolbelt.heroku.com/install.sh | sh
  # login to docker registries (dockerhub + heroku)
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - echo "$HEROKU_PASSWORD" | docker login -u "$HEROKU_USERNAME" --password-stdin registry.heroku.com

install:
  - npm install
  # build dockerized environment to run tests
  - docker-compose -f docker-compose.travis.yml build

script: docker-compose -f  docker-compose.travis.yml up \
  --abort-on-container-exit \
  --exit-code-from service-test

deploy:
  - provider: script
    script:
      # build docker images, push to dockerhub & heroku
      docker build -t alejandrodaneri/media-node-chotuve:staging .;
      docker tag alejandrodaneri/media-node-chotuve:staging  registry.heroku.com/$HEROKU_APP_NAME_STAGING/web;
      docker push alejandrodaneri/media-node-chotuve:staging;
      docker push registry.heroku.com/$HEROKU_APP_NAME_STAGING/web;
      heroku container:release web --app $HEROKU_APP_NAME_STAGING
    on:
      branch: develop

  - provider: script
    script:
      # build docker images, push to dockerhub & heroku
      docker build -t alejandrodaneri/media-node-chotuve:production .;
      docker tag alejandrodaneri/media-node-chotuve:production  registry.heroku.com/$HEROKU_APP_NAME/web;
      docker push alejandrodaneri/media-node-chotuve:production;
      docker push registry.heroku.com/$HEROKU_APP_NAME/web;
      heroku container:release web --app $HEROKU_APP_NAME
    on:
      branch: master
